{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/olooEvent.js","webpack:///./src/scripts/script.js","webpack:///./src/scripts/olooObserver.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/randomcolor/randomColor.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","EventDelegator","Event","create","initEvent","elemId","type","args","this","elem","document","getElementById","eventType","Array","isArray","assign","addEvent","func","options","boundFunc","bind","boundOptions","addEventListener","removeEvent","removeEventListener","randomColor","myBase","myApp","Subscribe","init","elems","subscribe","id","unsubscribe","forEach","key","broadcast","keys","length","setRandomColour","min","max","num","getRandomNumber","getRandomColour","Math","floor","random","DivBlockDelegator","divBlock","Element","createElement","colour","hue","luminosity","style","backgroundColor","getRandomHue","rgb","string","match","g","b","componentToHex","timeout","delay","amount","limit","newDelay","setTimeout","v","parseInt","hex","toString","initApplication","eventSandbox","tags","eventController","eventSandbox2","eventSandbox3","target","currentTarget","indexOf","tagName","stopPropagation","obj","main","num1","grid","tones","count","div","className","appendChild","onreadystatechange","readyState","webpackPolyfill","deprecate","paths","children","seed","colorDictionary","defineColor","total","Number","MAX_SAFE_INTEGER","charCodeAt","TypeError","H","S","totalColors","colors","push","hsv","format","HSVtoHSL","hsl","hslColor","alpha","HSVtoRGB","join","rgbColor","randomWithin","colorInput","number","color","hueRange","replace","red","substr","green","blue","cMax","delta","saturation","saturationRange","getColorInfo","sMin","sMax","bMin","lowerBounds","s1","v1","s2","v2","bMax","colorName","range","rnd","brightnessRange","h","h_i","f","q","k","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// ======================================================================\r\n// OOLO Event Sandbox Delegator Utilities\r\n//\r\n// Creating a new sandbox based on element ID's\r\n//\r\n// # Instantiate Delegator\r\n//  const eventSandbox = EventDelegator();\r\n// # Define Element by ID to attached Event sandbox to, types of event, and on what tags\r\n//  eventSandbox.initEvent(\"eventSandbox\", \"click\", { tags: [\"BUTTON\"] });\r\n//  For more Event types see: https://developer.mozilla.org/en-US/docs/Web/Events\r\n// # Call a function to handle the events ex. EventController Handles all events within the Event sandbox\r\n//  eventSandbox.addEvent(eventController);\r\n// ======================================================================\r\n\r\nexport function EventDelegator() {\r\n  // Creates an Event object on the element\r\n  const Event = Object.create(null);\r\n\r\n  Event.initEvent = function setup(elemId, type, args) {\r\n    // The Element to bind the event handler too\r\n    this.elem = document.getElementById(elemId);\r\n    // The type of event ex: \"click\"\r\n    this.eventType = type;\r\n    // Additional arguments that will be passed to the bound function as an object\r\n    this.args = args;\r\n    // Helper: If Array convert to object\r\n    if (Array.isArray(args)) {\r\n      this.args = Object.assign({}, args);\r\n    }\r\n  };\r\n  Event.addEvent = function add(func, options) {\r\n    // func: Bound an Function to an Event\r\n    // (options): Optional parameter for passing options to event listener ex: \"once: true\"\r\n    this.boundFunc = func.bind(this.elem, this.args);\r\n    // this.bound prevents binding loss for arguments and options\r\n    this.boundOptions = options;\r\n    this.elem.addEventListener(this.eventType, this.boundFunc, this.boundOptions);\r\n  };\r\n  Event.removeEvent = function remove() {\r\n    // Remove the listener, do not have to pass the \"options\" since it is bound\r\n    this.elem.removeEventListener(this.eventType, this.boundFunc, this.boundOptions);\r\n  };\r\n  return Event;\r\n}\r\n\r\n// ======================================================================\r\n// Event Utilities\r\n// ======================================================================\r\n\r\nexport function getTargetId(e, tags) {\r\n  // Prevents events triggering on the parent element\r\n  if (e.target !== e.currentTarget) {\r\n    // Returns the target ID of event for allowed tags Ex: DIV, BUTTON etc.\r\n    if (tags.indexOf(e.target.tagName) > -1) {\r\n      e.stopPropagation();\r\n      return e.target.id;\r\n    }\r\n  }\r\n  e.stopPropagation();\r\n  // Returns undefined if no target match by ID\r\n  return undefined;\r\n}\r\n","\"use strict\";\r\n\r\nimport css_ from \"../css/styles.css\";\r\n\r\nimport { EventDelegator, getTargetId } from \"./olooEvent\";\r\n\r\nimport { SubscribersDelegator } from \"./olooObserver\";\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  console.log(\"*** RUNNING IN DEV MODE! ***\");\r\n}\r\n\r\nconst randomColor = require(\"randomcolor\");\r\n\r\nconst myBase = Object.create(null);\r\nconst myApp = SubscribersDelegator();\r\nmyApp.init();\r\n\r\nmyBase.initApplication = function init() {\r\n  const eventSandbox = EventDelegator();\r\n  eventSandbox.initEvent(\"eventSandbox\", \"mouseover\", { tags: [\"DIV\"] });\r\n  eventSandbox.addEvent(eventController);\r\n\r\n  const eventSandbox2 = EventDelegator();\r\n  eventSandbox2.initEvent(\"eventSandbox\", \"mouseout\", { tags: [\"DIV\"] });\r\n  eventSandbox2.addEvent(eventController);\r\n\r\n  const eventSandbox3 = EventDelegator();\r\n  eventSandbox3.initEvent(\"eventSandbox\", \"click\", { tags: [\"DIV\"] });\r\n  eventSandbox3.addEvent(eventController);\r\n\r\n  function eventController(args, e) {\r\n    // Only Passes events of with tagNames defined in the array\r\n    const id = getTargetId(e, args.tags);\r\n    const min = 1;\r\n    const max = 25;\r\n\r\n    if (id !== undefined) {\r\n      const obj = myApp.elems[id];\r\n      if (e.type === \"mouseover\") {\r\n        obj.getRandomColour();\r\n        timeout(5, setRandomColour.bind(null, min, max), 0, 300);\r\n      } else if (e.type === \"mouseout\") {\r\n        obj.getRandomHue();\r\n        timeout(5, setRandomHue.bind(null, min, max), 0, 300);\r\n      } else if (e.type === \"click\") {\r\n        myApp.broadcast(\"getRandomColour\");\r\n        timeout(max, setRandomColour.bind(null, min, max), 0, 300, \"desc\", 20, 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  myBase.main();\r\n};\r\n\r\nmyBase.main = function main() {\r\n  divCreator();\r\n};\r\n\r\nfunction setRandomHue(min, max) {\r\n  const num = getRandomNumber(min, max);\r\n  const obj = myApp.elems[num];\r\n  obj.getRandomHue();\r\n}\r\n\r\nfunction setRandomColour(min, max) {\r\n  const num = getRandomNumber(min, max);\r\n  const obj = myApp.elems[num];\r\n  obj.getRandomColour();\r\n}\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction divCreator() {\r\n  divMaker(25);\r\n\r\n  function divMaker(num) {\r\n    let num1 = num;\r\n    const grid = document.getElementById(\"eventSandbox\");\r\n    num1 += 1;\r\n    let i = 1;\r\n    const tones = randomColor({ hue: \"random\", luminosity: \"light\", count: num1 });\r\n\r\n    for (; i < num1; i += 1) {\r\n      const div = DivBlockDelegator();\r\n      div.create(\"DIV\", i);\r\n      div.elem.className = \"item\";\r\n      // div.elem.textContent = i;\r\n      div.elem.style.backgroundColor = tones[i];\r\n      grid.appendChild(div.elem);\r\n      myApp.subscribe(div.id, div);\r\n    }\r\n  }\r\n}\r\n\r\nfunction DivBlockDelegator() {\r\n  const divBlock = Object.create(ElemDelegator());\r\n\r\n  divBlock.getRandomColour = function getRandomColour() {\r\n    const colour = randomColor({ hue: \"random\", luminosity: \"light\" });\r\n    this.elem.style.backgroundColor = colour;\r\n  };\r\n  divBlock.getRandomHue = function getRandomHue() {\r\n    const rgb = getRGBNums(this.elem.style.backgroundColor);\r\n    const colour = rgb2Hex(rgb[1], rgb[2], rgb[3]);\r\n    this.elem.style.backgroundColor = randomColor({ hue: colour, luminosity: \"light\" });\r\n  };\r\n  return divBlock;\r\n}\r\n\r\nfunction ElemDelegator() {\r\n  // This is the base Delegator \"Class\" for a element\r\n  const Element = Object.create(null);\r\n  // Use create for creating new elements\r\n  Element.create = function create(type, elemId) {\r\n    this.elem = document.createElement(type);\r\n    this.elem.id = elemId;\r\n    this.id = elemId;\r\n  };\r\n  // Use init for working with existing elements\r\n  Element.init = function init(elemId) {\r\n    this.id = elemId;\r\n    this.elem = document.getElementById(this.id);\r\n  };\r\n  return Element;\r\n}\r\n\r\n// ======================================================================\r\n// Utilities\r\n// ======================================================================\r\n\r\nfunction timeout(num, func, i = 0, delay = 1000, type = \"\", amount = 20, limit = 100) {\r\n  let n = i;\r\n  let newDelay = delay;\r\n\r\n  if (type === \"desc\") {\r\n    newDelay -= amount;\r\n    if (newDelay <= limit) {\r\n      newDelay = limit;\r\n    }\r\n  } else if (type === \"asc\") {\r\n    newDelay += amount;\r\n    if (newDelay >= limit) {\r\n      newDelay = limit;\r\n    }\r\n  }\r\n  n += 1;\r\n  func();\r\n  if (n < num) setTimeout(timeout, newDelay, num, func, n, newDelay);\r\n}\r\n\r\nfunction getRGBNums(string) {\r\n  let rgb = string;\r\n  rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\r\n  return rgb;\r\n}\r\n\r\nfunction componentToHex(v) {\r\n  let c = v;\r\n  if (typeof v === \"string\") {\r\n    c = parseInt(c, 10);\r\n  }\r\n  const hex = c.toString(16);\r\n  return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\nfunction rgb2Hex(r, g, b) {\r\n  return `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\r\n}\r\n\r\n// ======================================================================\r\n// Handler when the DOM is fully loaded\r\ndocument.onreadystatechange = function onreadystatechange() {\r\n  if (document.readyState === \"complete\") {\r\n    myBase.initApplication();\r\n  } else {\r\n    // Do something during loading (optional)\r\n  }\r\n};\r\n// ======================================================================\r\n","// ======================================================================\r\n// Observer Delegator Pattern\r\n// ======================================================================\r\n\r\nexport function SubscribersDelegator() {\r\n  const Subscribe = Object.create(null);\r\n\r\n  Subscribe.init = function init() {\r\n    this.elems = Object.create(null);\r\n  };\r\n  Subscribe.subscribe = function subscribe(id, elem) {\r\n    this.elems[id] = elem;\r\n  };\r\n  Subscribe.unsubscribe = function unsubscribe(elem) {\r\n    // Can unsubscribe one observer, or an array of observers\r\n    if (typeof elem === \"string\") {\r\n      delete this.elems[elem];\r\n    } else {\r\n      elem.forEach(key => delete this.elems[key]);\r\n    }\r\n  };\r\n  Subscribe.broadcast = function broadcast(func, ...args) {\r\n    // On each object called func\r\n    // Any additional args will get passed into the func\r\n    // define them just using comma seperator\r\n    const keys = Object.keys(this.elems);\r\n    for (let i = 0; i < keys.length; i += 1) {\r\n      this.elems[keys[i]][func](...args);\r\n    }\r\n  };\r\n  return Subscribe;\r\n}\r\n\r\n// ======================================================================\r\n// Observer Delegator Utilities\r\n// ======================================================================\r\n\r\nexport function createObserversById(subscriber, ids, delegator) {\r\n  ids.forEach(elemId => {\r\n    const elem = document.getElementById(elemId);\r\n    const observer = delegator();\r\n    observer.init(elemId, elem);\r\n    subscriber.subscribe(observer);\r\n  });\r\n}\r\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n"],"sourceRoot":""}